{
  "name": "@ericblade/quagga2",
  "version": "1.2.1",
  "description": "An advanced barcode-scanner written in JavaScript",
  "main": "lib/quagga.js",
  "types": "type-definitions/quagga.d.ts",
  "browser": "dist/quagga.min.js",
  "devDependencies": {
    "@babel/core": "^7.11.6",
    "@babel/plugin-proposal-class-properties": "^7.10.4",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.4",
    "@babel/plugin-proposal-object-rest-spread": "^7.11.0",
    "@babel/plugin-proposal-optional-chaining": "^7.11.0",
    "@babel/plugin-transform-runtime": "^7.11.5",
    "@babel/preset-env": "^7.11.5",
    "@babel/preset-typescript": "^7.10.4",
    "@babel/runtime": "^7.11.2",
    "@cypress/code-coverage": "^3.8.1",
    "@cypress/webpack-preprocessor": "5.4.6",
    "@types/chai": "^4.2.13",
    "@types/gl-vec2": "^1.3.0",
    "@types/lodash": "^4.14.161",
    "@types/mocha": "^5.2.7",
    "@types/react": "^16.9.51",
    "@types/sinon": "^9.0.8",
    "@types/sinon-chai": "^3.2.5",
    "@typescript-eslint/eslint-plugin": "^4.4.0",
    "@typescript-eslint/parser": "^4.4.0",
    "babel-loader": "^8.1.0",
    "babel-plugin-add-module-exports": "^1.0.4",
    "babel-plugin-istanbul": "^6.0.0",
    "chai": "^4.2.0",
    "core-js": "^3.6.5",
    "cross-env": "^7.0.2",
    "cypress": "^4.12.1",
    "eslint": "^7.11.0",
    "eslint-config-airbnb-typescript": "^11.0.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-react": "^7.21.4",
    "eslint-plugin-react-hooks": "^4.1.2",
    "esm": "^3.2.25",
    "mocha": "^5.2.0",
    "nyc": "^15.1.0",
    "sinon": "^9.2.0",
    "sinon-chai": "^3.5.0",
    "source-map-loader": "^1.1.1",
    "ts-mocha": "^7.0.0",
    "ts-node": "^9.0.0",
    "typescript": "^4.1.0-dev.20200814",
    "webpack": "^4.44.2",
    "webpack-cli": "^3.3.12"
  },
  "directories": {
    "doc": "doc"
  },
  "scripts": {
    "check-types": "tsc",
    "precoverage": "npx rimraf .nyc_output coverage",
    "coverage:node": "// DOES NOT WORK YET // npx cross-env NODE_ENV=test BUILD_ENV=development nyc --no-clean ts-mocha -p test/tsconfig.json src/**/test/node/*.spec.* src/**/test/*.spec.*",
    "coverage": "npm run cypress:run",
    "cypress:open": "npx cross-env NODE_ENV=development BUILD_ENV=development cypress open --env BUILD_ENV=development",
    "cypress:run": "npx cross-env NODE_ENV=test BUILD_ENV=development cypress run --env BUILD_ENV=development",
    "test:browser-specific": "NOT WORKING -- something like npx cypress run --config testFiles=[browser]",
    "test:browser-universal": "NOT WORKING -- something like npx cypress run --config testFiles=[universal]",
    "test:browser-all": "npm run cypress:run",
    "test:import": "mocha -r esm test/test-import.js",
    "test:node": "npx cross-env NODE_ENV=test ts-mocha -p test/tsconfig.json src/**/test/node/*.spec.* src/**/test/*.spec.* test/integration/integration.spec.ts",
    "test:require": "mocha test/test-require",
    "test:module": "npm run test:require && npm run test:import",
    "test": "npm run cypress:run && npx cross-env NODE_ENV=test BUILD_ENV=development ts-mocha -p test/tsconfig.json src/**/test/node/*.spec.* src/**/test/*.spec.* test/integration/integration.spec.ts",
    "build:dev": "npx cross-env NODE_ENV=development BUILD_ENV=development webpack --config configs/webpack.config.js",
    "build:prod": "npx cross-env NODE_ENV=production BUILD_ENV=production webpack --config configs/webpack.config.min.js",
    "build:node": "npx cross-env NODE_ENV=production BABEL_ENV=commonjs BUILD_ENV=node webpack --config configs/webpack.node.config.js",
    "build": "npm run check-types && npm run build:dev && npm run build:prod && npm run build:node",
    "watch": "npx cross-env BUILD_ENV=development webpack --watch",
    "lint": "eslint src",
    "snyk-protect": "npx snyk protect",
    "prepublish": "npm run snyk-protect",
    "upgrade-deps": "npx npm-check-updates && npm install"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ericblade/quagga2.git"
  },
  "bugs": {
    "url": "https://github.com/ericblade/quagga2/issues"
  },
  "keywords": [
    "quagga2",
    "quagga",
    "quaggajs",
    "barcode",
    "ean",
    "code128",
    "code39",
    "codabar",
    "i2of5",
    "upc",
    "getUserMedia",
    "imageprocessing"
  ],
  "author": "Eric Blade <blade.eric@gmail.com>",
  "contributors": [
    "Christoph Oberhofer <ch.oberhofer@gmail.com>",
    "Lindsey Simon <elsigh@gmail.com>",
    "dgreif <dustin.greif@gmail.com>",
    "David Madner <david.madner@posteo.at>",
    "Mario Zupan <mzupanmz@gmail.com>",
    "Edson Alves <edson.alves@oppus>",
    "Tomáš Hübelbauer <tomas@hubelbauer.net>",
    "Dan Manastireanu <danmana11@yahoo.com>",
    "E020873 <nicolas.henry-partner@arcelormittal.com>",
    "José Pedro Silva <sobreiro.pedro@gmail.com>",
    "Lasse Rafn <lasserafn@gmail.com>",
    "Laszlo Radics <laszlo.radics@dpc.hu>",
    "Martin Tillmann <mtillmann@gmail.com>",
    "Matthias Jauernig <matthias.jauernig@partner.commerzbank.com>",
    "Matthias Riegler <matthias@xvzf.tech>",
    "Pierre-Louis Peeters <pierrelouis.peeters@gmail.com>",
    "Rudolph Gottesheim <r.gottesheim@midnight-design.at>",
    "Sean Hussey <sean@seanhussey.com>",
    "Thomas <tricki@users.noreply.github.com>",
    "jclarkin <j.r.clarkin@gmail.com>",
    "kieat <kieat@users.noreply.github.com>",
    "Esteban Morales <red_bandit_11@hotmail.com>",
    "Ward Lootens <wardlootens@gmail.com>",
    "Taylor Southwick <twsouthwick@outlook.com>",
    "Youri Westerman <tetracon@gmail.com>",
    "Stefano Calì <stefanocali@gmail.com>",
    "Tony Brix <tony@brix.ninja>",
    "Alex Howes <alex@alexhowes.co.uk>",
    "Sudham Jayanthi <workwithsudham@gmail.com>"
  ],
  "license": "MIT",
  "engines": {
    "node": ">= 10.0"
  },
  "dependencies": {
    "@babel/polyfill": "^7.12.1",
    "get-pixels": "^3.3.2",
    "gl-mat2": "^1.0.1",
    "gl-vec2": "^1.3.0",
    "gl-vec3": "^1.1.3",
    "lodash": "^4.17.20",
    "ndarray": "^1.0.19",
    "ndarray-linear-interpolate": "^1.0.0",
    "snyk": "^1.422.0"
  },
  "snyk": true,
  "nyc": {
    "include": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx"
    ],
    "exclude": [
      "**/*.spec.*"
    ],
    "all": true,
    "extension": [
      ".js",
      ".jsx",
      ".ts",
      ".tsx"
    ],
    "require": [
      "ts-node/register",
      "babel-register"
    ],
    "reporter": [
      "text-summary",
      "html"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "greenkeeper": {
    "ignore": [
      "mocha",
      "@types/mocha"
    ]
  }
}
